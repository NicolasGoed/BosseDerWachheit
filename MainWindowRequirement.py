# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindowRequirement.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Fenster2 import Anforderungsliste
from ProjectManagement import *
from PyQt5.QtWidgets import QMessageBox



class MainFunction(object):
    
    # Thi Dok
    def __init__(self, currentuser):
            self.currentuser = currentuser
               
        
    # Niki Dok
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(825, 600)
        #MainWindow.setWindowOpacity(-5.0)
        self.verticalLayoutWidget = QtWidgets.QWidget(MainWindow)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(20, 40, 781, 461))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        
        self.CreateRequirement = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.CreateRequirement.setObjectName("Anforderung erstellen")
        self.verticalLayout.addWidget(self.CreateRequirement)
        
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("Projektliste")
        self.verticalLayout.addWidget(self.label)
        
        self.RequirementList = QtWidgets.QListWidget(self.verticalLayoutWidget)
        self.RequirementList.setObjectName("RequirementList")
        self.verticalLayout.addWidget(self.RequirementList)

        self.AddProjectEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.AddProjectEdit.setObjectName("Projekt hinzufügen")
        self.verticalLayout.addWidget(self.AddProjectEdit)

        self.AddProject = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.AddProject.setObjectName("Projekt hinzufügen")
        self.verticalLayout.addWidget(self.AddProject)

        self.DeleteProject = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.DeleteProject.setObjectName("Projekt Löschen")
        self.verticalLayout.addWidget(self.DeleteProject)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

# Adding projects from Database to QListObjects
        for aTuple in showProjectsName():
            self.RequirementList.addItems(aTuple)

    # Niki Dok
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.CreateRequirement.setText(_translate("MainWindow", "Anforderung erstellen"))
        self.AddProjectEdit.setPlaceholderText(_translate("MainWindow", "Projekt hinzufügen"))
        self.AddProject.setText(_translate("MainWindow", "Projekt hinzufügen"))
        self.DeleteProject.setText(_translate("MainWindow", "Projekt löschen"))
        self.label.setText(_translate("MainWindow", "Projektliste"))
        MainWindow.setWindowTitle("Projekte")
        
        self.CreateRequirement.clicked.connect(self.open_button_click_requirement)


        self.AddProject.clicked.connect(self.addProjectDef)
        self.DeleteProject.clicked.connect(self.deleteProjectDef)

    # Thi Dok
    def addProjectDef(self):
        projectname = self.AddProjectEdit.text()
        createProject(projectname)
        QtWidgets.QApplication.activeWindow().close()
        self.window = QtWidgets.QDialog()
        self.ui = MainFunction(self.currentuser)
        self.ui.setupUi(self.window)
        self.window.show()

    # Thi Dok
    def deleteProjectDef(self):
        try:
            selectedProject = self.RequirementList.currentItem().text()
            deleteProject(selectedProject)

            QtWidgets.QApplication.activeWindow().close()
            
            self.window = QtWidgets.QDialog()
            self.ui = MainFunction(self.currentuser)
            self.ui.setupUi(self.window)
            self.window.show()

        except:
            mmmDelete()
            
    # Thi Dok
    def open_button_click_requirement(self):
        try:
            selectedProject = self.RequirementList.currentItem().text()
            #self.openCreateRequirement()
            currentuser = self.currentuser
            self.window = QtWidgets.QDialog()
            self.ui = Anforderungsliste(selectedProject, currentuser)
            self.ui.setupUi(self.window)
            #MainWindow.hide()
            self.window.show()
        
        except:
            mmm()

# Niki        
def mmm():
    msg = QMessageBox()
    msg.setWindowTitle("Fehler")
    msg.setText("Bitte Projekt auswählen oder ein neues Projekt erstellen.")
    x = msg.exec_()

# Niki
def mmmDelete():
    msg = QMessageBox()
    msg.setWindowTitle("Fehler")
    msg.setText("Bitte Projekt zum Löschen auswählen.")
    x = msg.exec_()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QDialog()
    ui = MainFunction()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
